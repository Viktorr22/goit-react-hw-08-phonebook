{"version":3,"file":"static/js/88.a0d79cce.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.js","components/Form/Form.styled.js","redux/Contacts/selectors.js","components/Form/Form.js","components/Contacts/Contact.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Styles/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionBox = styled.section`\n  display: flex;\n  justify-content: center;\n  background-color: #d4dadc;\n  padding: 20px;\n`;\n","import { SectionBox } from './Section.styled';\n\nexport function Section({ children }) {\n  return (\n    <SectionBox>\n      <div>{children}</div>\n    </SectionBox>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FormBox = styled.form`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 15px;\n  border: 0.5px solid black;\n  border-radius: 6px;\n  width: 300px;\n  padding: 15px;\n  background-color: #ccd1d4;\n`;\n\nexport const FormInput = styled.input`\n  background-color: #d4dadc;\n  border: 0.5px solid black;\n  border-radius: 4px;\n`;\n\nexport const FormButton = styled.button`\n  height: 30px;\n  width: 120px;\n  background-color: greenyellow;\n  border: 3px solid black;\n  border-radius: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: 500;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { FormBox, FormButton, FormInput } from './Form.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/Contacts/selectors';\nimport { addContact } from 'redux/Contacts/contactsOperations';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formNameValue = event.target.elements.name.value;\n    const formNumberValue = event.target.elements.number.value;\n    const dataName = { name: formNameValue };\n    const dataNumber = { number: formNumberValue };\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === formNameValue.toLowerCase()\n      )\n    ) {\n      alert(`${formNameValue} is already in contacts.`);\n      event.target.reset();\n      return;\n    }\n    dispatch(addContact({ ...dataName, ...dataNumber }));\n    event.target.reset();\n  };\n\n  return (\n    <FormBox onSubmit={handleSubmit}>\n      <h3>Name</h3>\n      <label>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <h3>Number</h3>\n      <label>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <FormButton type=\"submit\" disabled={isLoading}>\n        Add contact\n      </FormButton>\n    </FormBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactMarkupList = styled.ul`\n  margin-top: 0px;\n  width: 300px;\n  padding-left: 0px;\n`;\n\nexport const ContactMarkupItem = styled.li`\n  display: flex;\n  margin-bottom: 15px;\n  justify-content: space-between;\n`;\n\nexport const ContactMarkupButton = styled.button`\n  height: 25px;\n  width: 80px;\n  background-color: #35c8d3;\n  border: 3px solid black;\n  border-radius: 6px;\n  cursor: pointer;\n  &:hover {\n    font-weight: 500;\n  }\n`;\n\nexport const ContactName = styled.span`\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContactMarkupList,\n  ContactMarkupItem,\n  ContactMarkupButton,\n  ContactName,\n} from './Contact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/contactsOperations';\nimport { selectIsLoading, selectContacts } from 'redux/Contacts/selectors';\n\nexport const ContactList = ({ onGetFilteredContact }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {contacts && (\n        <ContactMarkupList>\n          {onGetFilteredContact().map(({ id, name, number }) => (\n            <ContactMarkupItem key={id}>\n              <p>\n                <ContactName>{name}: </ContactName> {number}\n              </p>\n              <ContactMarkupButton\n                disabled={isLoading}\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </ContactMarkupButton>\n            </ContactMarkupItem>\n          ))}\n        </ContactMarkupList>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  onGetFilteredContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 15px;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  background-color: #d4dadc;\n  border: 0.5px solid black;\n  border-radius: 4px;\n  width: 180px;\n`;\n","import { FilterBox, FilterInput } from './Filter.styled';\nimport { changeFilterValue } from 'redux/Contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(changeFilterValue(event.target.value));\n  };\n\n  return (\n    <FilterBox>\n      Find contacts by name\n      <FilterInput type=\"text\" onChange={changeFilter} />\n    </FilterBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsListTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const NoContactsText = styled.p`\n  text-align: center;\n  font-size: 18px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Section, ContactList, Filter } from 'components';\nimport { fetchContacts } from 'redux/Contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n} from 'redux/Contacts/selectors';\nimport {\n  ContactsListTitle,\n  NoContactsText,\n  PageTitle,\n} from './Styles/Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContact = () => {\n    if (contacts.length > 0) {\n      const lowerFilter = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(lowerFilter)\n      );\n    }\n  };\n\n  return (\n    <Section>\n      <PageTitle>Phonebook</PageTitle>\n      <Form />\n      <ContactsListTitle>Contacts</ContactsListTitle>\n      {contacts.length === 0 ? (\n        <NoContactsText>There is no contacts</NoContactsText>\n      ) : (\n        <>\n          <Filter />\n          <ContactList onGetFilteredContact={getFilteredContact} />\n        </>\n      )}\n      {error && <p>{error}</p>}\n    </Section>\n  );\n}\n"],"names":["SectionBox","styled","Section","children","FormBox","FormInput","FormButton","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","Form","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","formNameValue","target","elements","name","value","formNumberValue","number","dataName","dataNumber","find","contact","toLowerCase","alert","reset","addContact","type","pattern","title","required","disabled","ContactMarkupList","ContactMarkupItem","ContactMarkupButton","ContactName","ContactList","onGetFilteredContact","map","id","onClick","deleteContact","onDeleteContact","FilterBox","FilterInput","Filter","onChange","changeFilterValue","PageTitle","ContactsListTitle","NoContactsText","Contacts","useEffect","fetchContacts","length","lowerFilter","includes"],"sourceRoot":""}